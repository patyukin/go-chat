openapi: 3.0.0
info:
  title: Chat Authentication API
  version: 1.0.0
paths:
  /sign-up:
    post:
      summary: "Register a new user"
      operationId: signUp
      requestBody:
        description: "User registration data"
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '303':
          description: Redirect to the login page
          headers:
            Location:
              schema:
                type: string
                example: /login
        '201':
          description: "User registered successfully"
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: "registration page"
      operationId: pageSignUp
      responses:
        '200':
          description: Registration, return HTML page
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Registration user!</body></html>"

  /sign-in:
    post:
      summary: "Login a user"
      operationId: signIn
      requestBody:
        description: "User login credentials"
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: "User logged in successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '401':
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: "login page"
      operationId: pageSignIn
      responses:
        '200':
          description: Login, return HTML page
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Login user!</body></html>"

  /:
    get:
      summary: Get the main page
      operationId: pageMain
      responses:
        '200':
          description: Main page HTML
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Welcome to the main page!</body></html>"
        '302':
          description: Redirect to login if not authenticated
          headers:
            Location:
              schema:
                type: string
                example: /login

components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          description: "Username should be unique"
        password:
          type: string
          description: "Password should be at least 8 characters long"
      required:
        - username
        - password
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          description: "Username should be unique"
        password:
          type: string
          description: "Password should be at least 8 characters long"
      required:
        - username
        - password
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: "Access token"
        refresh_token:
          type: string
          description: "Refresh token"
      required:
        - access_token
        - refresh_token
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
